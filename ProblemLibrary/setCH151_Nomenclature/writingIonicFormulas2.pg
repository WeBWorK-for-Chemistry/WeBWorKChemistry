## DBsubject()
## DBchapter()
## DBsection()
## Level()
## KEYWORDS()
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1()
## Problem1()
## Author('Stephanie Bryan')
## Institution('PCC')
## Language(en-US)

DOCUMENT();

############################################################
# Load Macros
############################################################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGunion.pl",
  "contextReaction.pl",
  "PGcourse.pl",
  "parserPopUp.pl",
  "answerHints.pl",
  "contextString.pl",
  "contextArbitraryString.pl"
);

############################################################
# Header
############################################################
#COMMENT('');
TEXT(beginproblem());

############################################################
# PG Setup
############################################################

Context("ArbitraryString");


@cations = ("Rb", "Li", "Sr",  "Na", "Mg", "Al", "K", "Ca", "Pb", "Pb", "Fe", "Fe", "Cu", "Cu", "Mn", "Sn", "Sn", "Co", "Co", "Cr", "Cr");

@cat_charge = ("+", "+", "2+",  "+", "2+", "3+", "+", "2+", "2+", "4+","2+","3+","+","2+","7+","2+","4+","2+","3+","2+","3+");

@anion_sub = (1,1,2,1,2,3,1,2,2,4,2,3,1,2,7,2,4,2,3,2,3);
    
@cname = ("rubidium", "lithium", "strontium", "sodium", "magnesium", "aluminum",  "potassium", "calcium", "lead(II)", "lead(IV)", "iron(II)", "iron(III)", "copper(I)", "copper(II)", "manganese(VII)", "tin(II)", "tin(IV)", "cobalt(II)", "cobalt(III)", "chromium(II)", "chromium(III)");

@anions = ("CH_3COO", "ClO_3", "ClO_2", "CN", "OH", "NO_3", "NO_2", "MnO_4", "CO_3", "Cr_2O_7", "SO_4", "SO_3", "PO_4", "N", "P","F", "Cl", "Br","I","S", "O");

@aname = ( "acetate","chlorate", "chlorite", "cyanide", "hydroxide", "nitrate", "nitrite", "permanganate", "carbonate", "dichromate","sulfate", "sulfite", "phosphate", "nitride", "phosphide", "fluoride", "chloride", "bromide","iodide","sulfide", "oxide");

@anion_charge = ( "-", "-", "-", "-", "-", "-", "-", "-", "2-", "2-", "2-", "2-", "3-", "3-", "3-","-", "-", "-", "-","2-", "2-");

@cation_sub = (1,1,1,1,1,1,1,1,2,2,2,2,3,3,3,1,1,1,1,2,2);



my @numbers;
my %unique;
#pick 9 cations and anions
for (0..9) {
    my $number = random(0,20);
    redo if $unique{$number}++;
    push @numbers, $number;
    }
for (0..9) {
    my $number2 = random(0,20);
    redo if $unique{$number2}++;
    push @numbers2, $number2;
 }

foreach (0..9) {
    $i = $numbers[$_];
    $j = $numbers2[$_];   
    
    $cat[$_] = $cations[$i];
    $cc[$_] = $cat_charge[$i];
    $asub[$_] = $anion_sub[$i];
    
    $an[$_] = $anions[$j];
    $ac[$_] = $anion_charge[$j];
    $csub[$_] = $cation_sub[$j];
    
    if ($csub[$_] == 2 && $asub[$_] == 4) {
        $csub[$_] = 1;
        $asub[$_] = 2;
        }

    
    if ($csub[$_] == 1 && $asub[$_] == 1) {
        $formula[$_] = "$cat[$_] $an[$_]";
        }
    elsif ($csub[$_] == 1) {
        if ($j < 13) {
        $formula[$_] = "$cat[$_] (${an[$_]})_$asub[$_]";
            }
        else {
        $formula[$_] = "$cat[$_] ${an[$_]}_$asub[$_]";
            }
        }
    elsif ($asub[$_] == 1) {
        $formula[$_] = "${cat[$_]}_$csub[$_] $an[$_]";
        }
    elsif ($csub[$_] == $asub[$_]) {
        $formula[$_] = "$cat[$_] $an[$_]";
        }
    elsif ($j < 13) {
        $formula[$_] = "${cat[$_]}_$csub[$_] (${an[$_]})_$asub[$_]";
        }
    else {
        $formula[$_] = "${cat[$_]}_$csub[$_] ${an[$_]}_$asub[$_]";
        }
        
    $answ[$_] = $cname[$i]." ".$aname[$j];
    }
    
Context("Reaction");

foreach (0..9) {
  $final[$_] = Formula($formula[$_]);
  
    }

foreach (0..9) {
    ANS($final[$_]->cmp()->withPostFilter(AnswerHints(
  [Compute("Al(CH_3CO_2)_3"),Compute("Rb(CH_3CO_2)_2"), Compute("Sr(CH_3CO_2)_2"), Compute("NaCH_3CO_2"), Compute("Mg(CH_3CO_2)_2"), Compute("KCH_3CO_2"), Compute("Ca(CH_3CO_2)_2"),Compute("Pb(CH_3CO_2)_2"),Compute("Pb(CH_3CO_2)_4"), Compute("Fe(CH_3CO_2)_2"), Compute("Fe(CH_3CO_2)_3"), Compute("Cu(CH_3CO_2)_2"),Compute("CuCH_3CO_2"), Compute("Mn(CH_3CO_2)_7"),Compute("Sn(CH_3CO_2)_2"), Compute("Sn(CH_3CO_2)_4"), Compute("Co(CH_3CO_2)_2"), Compute("Co(CH_3CO_2)_3"), Compute("Cr(CH_3CO_2)_2"), Compute("Cr(CH_3CO_2)_3")] => 
  "Please use CH_3COO for acetate in this problem. There are many ways to write this formula and only this form is accepted for this problem.",
)));
            }



############################################################
# Body
############################################################

BEGIN_PGML
##Writing Ionic Formulas

Write the formula for the following names. 

*Rules for entering formulas:* Instead of subscriping the numbers in formulas, you will type an underscore when you want the next number to be a subscript.  The 2 in the formula [`H_2 O`], the formula for water, is a subscript.  It sits lower than the rest.  The formula for water will be written H_2O in a WeBWorK answer blank. The _ before the 2 tells the computer it is a subscript.  You can type that character on a Windows computer using shift and the dash button.

Use [`CH_3COO^{-}`] for acetate in this problem.  This would be entered as CH_3COO in the formula. 

example:  manganese(IV) sulfide  `MnS_{2}`

a. [$answ[0]] [____________________]{$finalAns[0]} 

a. [$answ[1]] [____________________]{$finalAns[1]}

a. [$answ[2]] [____________________]{$finalAns[2]} 

a. [$answ[3]] [____________________]{$finalAns[3]}

a. [$answ[4]] [____________________]{$finalAns[4]}

a. [$answ[5]] [____________________]{$finalAns[5]}

a. [$answ[6]] [____________________]{$finalAns[6]}

a. [$answ[7]] [____________________]{$finalAns[7]}

a. [$answ[8]] [____________________]{$finalAns[8]}

a. [$answ[9]] [____________________]{$finalAns[9]} 



END_PGML
############################################################
#BEGIN_PGML_HINT




#END_PGML_HINT

############################################################


#BEGIN_PGML_SOLUTION



#END_PGML_SOLUTION

############################################################
# End Problem
############################################################




ENDDOCUMENT();

