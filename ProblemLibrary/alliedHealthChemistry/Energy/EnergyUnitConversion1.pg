## DBCCSS('')
## Institution(PCC)
## Author(Lee McPherson, Stephanie Bryan)

##############################################

DOCUMENT();

loadMacros(
    "PGstandard.pl",                   "MathObjects.pl",
    "PGML.pl",                         "PGcourse.pl",
    "answerHints.pl",                  "niceTables.pl",
    "parserPopUp.pl",                  "contextInexactValue.pl",
    "contextInexactValueWithUnits.pl", "parserDimensionalAnalysis.pl",
    "parserMultiAnswer.pl",            "weightedGrader.pl"
);

HEADER_TEXT(<<EOF);
  <style>
  .conversionEQ {
    display: flex;
    align-items: center;
  }
  .conversionEQ > div {
    text-align: center;
  }
  .conversionFractionBar {
  line-height: 1px;
  width: 100%;
  border-bottom: 1px solid black;
  margin-bottom: 4px;
  }
  .conversionEQmath {
    padding: 1em;
  }
  </style>  
EOF

##############################################

sub conversionEQ {
    my $start   = shift;
    my $colsref = shift;
    my $n       = scalar @{$colsref};
    my $end     = shift;
    my $html;
    $html .= '<div class="conversionEQ">';
    $html .= '<div>';
    $html .= $start;
    $html .= '</div>';

    for ($i = 0; $i < $n; $i += 2) {
        $html .= '<div class="conversionEQmath">';
        $html .= math_ev3('\times');
        $html .= '</div>';
        $html .= '<div class="conversionEQcol">';
        $html .= '<div>';
        $html .= $colsref->[$i];
        $html .= '</div>';
        $html .= '<div class="conversionFractionBar">';
        $html .= '<svg height="1" width="40">';
        $html .= '<desc>per</desc>';
        $html .= '</svg>';
        $html .= '</div>';
        $html .= '<div>';
        $html .= $colsref->[ $i + 1 ];
        $html .= '</div>';
        $html .= '</div>';
    }
    $html .= '<div  class="conversionEQmath">';
    $html .= math_ev3('{}={}');
    $html .= '</div>';
    $html .= '<div>';
    $html .= $end;
    $html .= '</div>';
    $html .= '</div>';
    MODES(HTML => $html);
}

install_weighted_grader();

Context("Numeric");

$m = random(101, 301, 1);

while ($m % 10 == 0) {
    $m = 243;
}

Context("InexactValueWithUnits");
Context()->flags->set(
    'newUnit' => [
        [ 'Joule',     'Joules',     'J' ],
        [ 'kilojoule', 'kilojoules', 'kJ' ],
        [ 'calories',  'calorie',    'cal' ],
        [ 'Calories',  'Calorie',    'Cal' ]
    ]
);
$value = InexactValue($m, 3);
$given = InexactValueWithUnits([ $m, 3 ], 'Cal');

$display = $value . ' Cal';

# using 1000 cal = 1 Cal
$n1 = InexactValueWithUnits([ 1000, 9**9**9 ], 'cal');
$d1 = InexactValueWithUnits([ 1,    9**9**9 ], 'Cal');
# make this exact (infinite s.f., 9**9**9 is a shortcut for infinity)

# using 1 cal = 4.184 J
$n2 = InexactValueWithUnits(4.184,          'J');
$d2 = InexactValueWithUnits([ 1, 9**9**9 ], 'cal');

# using 1000 J = 1 kiloJoule
$n3 = InexactValueWithUnits([ 1,    9**9**9 ], 'kJ');
$d3 = InexactValueWithUnits([ 1000, 9**9**9 ], 'J');

$answer = $given * $n1 / $d1 * $n2 / $d2 * $n3 / $d3;

# To create a dimensional analysis problem, first put all of the expected answer blanks into the MultiAnswer section.
# These need to be numerator, then denominator... in that pattern exactly.  You end it with a precalculated answer because
# we expect students to fill in that blank, too.
# Finally, instead of customizing your own MultiAnswer, call the asDimensionalAnalysis function and provide it the starting value for the
# actual dimensional analysis.  A second parameter will adjust how the scoring is done.

$ma = MultiAnswer($n1, $d1, $n2, $d2, $n3, $d3, $answer)
    ->asDimensionalAnalysis($given);

# use the conversionEQ below by filling in the starting value, an array of the conversion factor blanks, then the final answer blank.

$dimensionalAnalysisSolution =
    DimensionalAnalysis::generateExplanation([$given],
        [ $n1, $d1, $n2, $d2, $n3, $d3 ], $answer);
##############################################

TEXT(beginproblem());

BEGIN_PGML
##Converting Energy Units

*1 cal = 4.184 J*


*1 Cal (a food Calorie) = 1 kcal = 1000 cal*

A granola bar supplies [$display]. How many kilojoules is this?

[@conversionEQ($display,[ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10)],ans_rule(10));@]*
 
END_PGML

# This weights the final answer with X percentage and splits the rest among the conversion factors.
my $finalAnswerWeight = 50;
my $remain            = 100 - $finalAnswerWeight;
my @ansArr            = $ma->cmp();
my $finalAns          = pop @ansArr;
for ($i = 0; $i < scalar @ansArr; $i++) {
    WEIGHTED_ANS($ansArr[$i], $remain / (scalar @ansArr))
        ;    # sets weighting for dimensional analysis blanks
}
WEIGHTED_ANS($finalAns, $finalAnswerWeight);   # sets weighting for final answer

# Without weighting, you could simply use this:
# ANS($ma->cmp);
# each answer blank will be worth the same amount of points.

##############################################

BEGIN_PGML_HINT



For more information on energy conversion, click [@ htmlLink( protect_underbar("https://chem.libretexts.org/Courses/Portland_Community_College/CH104:_Allied_Health_Chemisty_I_(2nd_Edition)/11:_Energy_and_Chemical_Reactions/11.01:_Energy?contentOnly"), protect_underbar("here"), "TARGET='_blank'" ); @]*



END_PGML_HINT
##############################################

BEGIN_PGML_SOLUTION

[```[$dimensionalAnalysisSolution]```]


END_PGML_SOLUTION

ENDDOCUMENT();
