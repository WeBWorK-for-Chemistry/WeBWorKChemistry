DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGML.pl",
"contextInexactValue.pl",
"contextInexactValueWithUnits.pl",
"parserDimensionalAnalysis.pl",
"chemQuillMath.pl",
);

TEXT(beginproblem());

Context("InexactValue");
Context()->flags->set(failOnValueWrong=>1);  # must have value correct (no partial credit for getting sig figs only)
Context()->flags->set(creditValue=>0.75);    # 75% credit for correct answer (default is 50%)
Context()->flags->set(creditSigFigs=>0.25);  # 25% credit for sig figs

$val1 = random(1, 4, 0.001); # generate number from 1 to 4 including to the 3rd decimal place 
$val2 = random(0.4, 0.8, 0.001); # generate number from 0.4 to 0.8 including to the 3rd decimal place 

$goldCoinMass = InexactValue(sprintf('%.3f', $val1)); # create InexactValue using random value but sprintf guarantees starting value has 3 decimals even if zero
$goldMolarMass = InexactValue('196.9665');
$avogadrosNumber = InexactValue('6.022e23');
$atomsInCoin = $goldCoinMass / $goldMolarMass * $avogadrosNumber;

$goldPieceMass = InexactValue(sprintf('%.3f',$val2));

$atomsInPiece = $goldPieceMass / 1000 * $atomsInCoin / $goldCoinMass;

# [`[$variable]`] <- surrounding variable in brackets with single backticks in brackets displays inline LaTeX.
# Double backticks is display-style inline LaTeX.
# Triple backticks is display math LaTeX.
BEGIN_PGML

A gold coin weighing [`[$goldCoinMass]`] g contains [`[$atomsInCoin]`] atoms. How many atoms are in a flake of gold weighing [`[$goldPieceMass]`] mg?

[______]{$atomsInPiece} atoms

END_PGML

############################
#  Solution

# Don't require student to enter units for problem above.  However, recreate problem for solution
# using InexactValueWithUnits so that full dimensional analysis is shown.
Context("InexactValueWithUnits");
$atomsInCoinUnits = InexactValueWithUnits($atomsInCoin, 'atoms');
$goldPieceMassMilligrams = InexactValueWithUnits($goldPieceMass, 'mg');
$goldCoinMassGrams = InexactValueWithUnits($goldCoinMass, 'g');
$n1 = InexactValueWithUnits(['0.001', Inf], 'g');  # infinite sig figs for conversion from mg to g
$d1 = InexactValueWithUnits(['1', Inf], 'mg');    # infinite sig figs for conversion from mg to g

$conversionAnswer = $goldPieceMassMilligrams * $n1 / $d1;
$atomsInPieceUnits = $conversionAnswer * $atomsInCoinUnits / $goldCoinMassGrams;

$dimensionalAnalysisConversion = DimensionalAnalysis::generateExplanation([$goldPieceMassMilligrams], [$n1, $d1], $conversionAnswer);
$dimensionalAnalysisFinal = DimensionalAnalysis::generateExplanation([$conversionAnswer], [$atomsInCoinUnits, $goldCoinMassGrams], $atomsInPieceUnits);

$goldMolarMassUnit = InexactValueWithUnits($goldMolarMass, 'g');
$molUnity = InexactValueWithUnits(['1', Inf], 'mol'); 
$avogradroUnit = InexactValueWithUnits($avogadrosNumber, 'atoms');    

$alternateDimensionalAnalysis = DimensionalAnalysis::generateExplanation([$goldPieceMassMilligrams], 
  [$n1, $d1, $molUnity ,$goldMolarMassUnit, $avogradroUnit, $molUnity],$atomsInPieceUnits);

BEGIN_PGML_SOLUTION
### Step 1

Convert grams into milligrams:

[```[$dimensionalAnalysisConversion]```]

### Step 2

Next, use the proportion of atoms to grams from the *coin* to solve for the unknown flake:

[```[$dimensionalAnalysisFinal]```]

### Alternate solution

If you have access to a periodic table, convert to grams, then use the molar mass of gold and Avogadro's number to calculate the solution:

[```[$alternateDimensionalAnalysis]```]

END_PGML_SOLUTION

ENDDOCUMENT();