DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGML.pl",
"contextInexactValue.pl",
"contextInexactValueWithUnits.pl",
"contextChemical.pl",
"parserDimensionalAnalysis.pl",
"chemQuillMath.pl",
);

TEXT(beginproblem());

Context("InexactValue");
Context()->flags->set(failOnValueWrong=>1);  # must have value correct (no partial credit for getting sig figs only)
Context()->flags->set(creditValue=>0.75);    # 75% credit for correct answer (default is 50%)
Context()->flags->set(creditSigFigs=>0.25);  # 25% credit for sig figs

$val1 = random(3, 12, 0.01); # generate number from 3 to 12 including to the 2nd decimal place 
$compoundMass = InexactValue(sprintf('%.2f', $val1)); # create InexactValue using random value but sprintf guarantees starting value has 2 decimals even if zero

@chemicalOptions = ();  
for (my $i=2; $i < 25; $i++){
  push(@chemicalOptions, 'C_{' . $i . '}H_{' . ($i*2+2) . '}');  # generate list of alkanes with 2 to 24 carbons
}
$chemical = Chemical::Chemical->new(@chemicalOptions[random(0,22,1)]); # get one at random and convert the string to Chemical
$molarMass = $chemical->molarMass(); # get a molar mass of the chemical

$amuConv = InexactValue('1.66054e-27');
$microConv = InexactValue('1e-6', Inf);
$kgConv = InexactValue('1e3', Inf);


$answer = $compoundMass * $microConv / $kgConv / $amuConv / $molarMass;

BEGIN_PGML
A single molecule of [`[$chemical]`] has a mass of [$molarMass] u (atomic mass units). Notice that [`1\,\mathrm{u} = [$amuConv]\,\mathrm{kg}`].  
How many molecules are contained in [`[$compoundMass]`] [`\mu`]g of this compound?

 [______]{$answer} molecules
END_PGML


############################
#  Solution
# Don't require student to enter units for problem above.  However, recreate problem for solution
# using InexactValueWithUnits so that full dimensional analysis is shown.
Context("InexactValueWithUnits");
$compoundMassug = InexactValueWithUnits($compoundMass, 'ug');
$n1 = InexactValueWithUnits($microConv, 'g');
$unityug = InexactValueWithUnits(['1', Inf], 'ug');
$unitykg = InexactValueWithUnits(['1', Inf], 'kg');  
$d2 = InexactValueWithUnits($kgConv, 'g');    

$n3 = InexactValueWithUnits(['1', Inf], 'u');  
$amuConvKg = InexactValueWithUnits($amuConv, 'kg');

$molarMassU = InexactValueWithUnits($molarMass, 'u');  
$moleculeUnity = InexactValueWithUnits([1, Inf], 'molecule');  

$conversionAnswer = $compoundMassug * $n1 / $unityug * $unitykg / $d2;

$conversionAnswer2 = $conversionAnswer * $n3 / $amuConvKg;

$moleculesInCompound = $conversionAnswer2 * $moleculeUnity / $molarMassU ;

$dimensionalAnalysis1 = DimensionalAnalysis::generateExplanation([$compoundMassug], [$n1, $unityug, $unitykg, $d2], $conversionAnswer);
$dimensionalAnalysis2 = DimensionalAnalysis::generateExplanation([$conversionAnswer], [$n3, $amuConvKg], $conversionAnswer2);
$dimensionalAnalysis3 = DimensionalAnalysis::generateExplanation([$conversionAnswer2], [$moleculeUnity, $molarMassU], $moleculesInCompound);

BEGIN_PGML_SOLUTION
### Step 1

Since we'll need to use a conversion later that requires a mass in kilograms, convert micrograms into kilograms:

[```[$dimensionalAnalysis1]```]

### Step 2

Next, use the kilogram to atomic mass units conversion:

[```[$dimensionalAnalysis2]```]

### Step 3

Finally, we'll use the equality stated in the first sentence ([`[$moleculeUnity] = [$molarMassU]`]) to convert from atomic mass units to a number of molecules.

[```[$dimensionalAnalysis3]```]

END_PGML_SOLUTION

ENDDOCUMENT();