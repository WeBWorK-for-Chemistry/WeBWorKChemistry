DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGML.pl",
"contextInexactValue.pl",
"contextInexactValueWithUnits.pl",
"parserDimensionalAnalysis.pl",
"chemQuillMath.pl",
);

Context("InexactValue");
Context()->flags->set(failOnValueWrong=>1);  # must have value correct (no partial credit for getting sig figs only)
Context()->flags->set(creditValue=>0.75);    # 75% credit for correct answer (default is 50%)
Context()->flags->set(creditSigFigs=>0.25);  # 25% credit for sig figs


$val1 = random(10, 18, 0.1); # generate number from 10 to 18 out to tenths place

$tank = InexactValue(sprintf("%.1f", $val1));

@gallonLiter = InexactValueWithUnits::getConversion('L', 'gal', {limitSF=>4});

$tank2 = $tank * $gallonLiter[0]->{inexactValue} / $gallonLiter[1]->{inexactValue}; 

BEGIN_PGML
In most countries, gasoline is sold by the liter. How many liters does it take to completely fill a [$tank] gallon gas tank?

 [______]{$tank2} L

Enter the value with the appropriate number of significant figures.  Be sure not to limit your sig figs with an 
imprecise conversion factor.

 END_PGML


############################
#  Solution  Using the PG solution below will supersede the solution block in the ADAPT question framework

# Don't require student to enter units for problem above.  However, recreate problem for solution
# using InexactValueWithUnits so that full dimensional analysis is shown.
Context("InexactValueWithUnits");
$tankgal = InexactValueWithUnits($tank, 'gal');

$tank2gal = $tankgal * $gallonLiter[0] / $gallonLiter[1]; 
$conversion = DimensionalAnalysis::generateExplanation([$tankgal], [$gallonLiter[0], $gallonLiter[1]], $tank2gal);
$conversionSf = DimensionalAnalysis::generateSigFigsExplanation([$tankgal], [$gallonLiter[0], $gallonLiter[1]], $tank2gal);

BEGIN_PGML_SOLUTION

You'll have to look up the correct conversion factor for gallons to Liters.  If we don't want to make our data less precise, 
since the data has 3 significant figures, we'll need a conversion factor with 4 sig figs at least.

[` [$gallonLiter[0]] = [$gallonLiter[1]] `] will work in this case.  Setup the conversion so gallons cancels out.

[``` [$conversion] ```]

[$conversionSf]**

END_PGML_SOLUTION

ENDDOCUMENT();