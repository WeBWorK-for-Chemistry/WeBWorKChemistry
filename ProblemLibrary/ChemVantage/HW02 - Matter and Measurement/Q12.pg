DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGML.pl",
"contextInexactValue.pl",
"contextInexactValueWithUnits.pl",
"parserDimensionalAnalysis.pl",
"chemQuillMath.pl",
);

Context("InexactValue");
Context()->flags->set(failOnValueWrong=>1);  # must have value correct (no partial credit for getting sig figs only)
Context()->flags->set(creditValue=>0.75);    # 75% credit for correct answer (default is 50%)
Context()->flags->set(creditSigFigs=>0.25);  # 25% credit for sig figs


$val1 = random(80, 99, 0.1); # generate number from 80 to 99 out to tenths place
$val2 = random(20, 40, 0.1);

$length = InexactValue(sprintf("%.1f", $val1));
$width = InexactValue(sprintf("%.1f", $val2));

$area = $length*$width;

BEGIN_PGML
If a rectangular lawn is measured to be 98.4 ft long and 27.1 ft wide, what is the area of the lawn in square feet?

 [______]{$area} sq ft

Enter the value with the appropriate number of significant figures.

END_PGML

############################
#  Solution  Using the PG solution below will supersede the solution block in the ADAPT question framework

# Don't require student to enter units for problem above.  However, recreate problem for solution
# using InexactValueWithUnits so that full dimensional analysis is shown.
Context("InexactValueWithUnits");
$lengthft = InexactValueWithUnits($length, 'ft');
$widthft = InexactValueWithUnits($width, 'ft');
$areasqft = $lengthft*$widthft;

$explanation = $area->generateMultiplyDivideExplanation($length, $width, 1);
$explanationText = $area->generateMultiplyDivideExplanation($length, $width, 1, {plainText=>1});

BEGIN_PGML_SOLUTION
An area can be calculated by multiplying length times width.  Since both values are already in feet units 
we don't have to do any conversions to get an area in square feet ([`\mathrm{ft}^2`]).

[```[$lengthft]\times[$widthft]=[$areasqft] ```]

##### Sig Figs explanation

[$explanationText]

[``` [$explanation] ```]

Be aware that even though we're rounding to three digits, you cannot _drop_ the ones digit because 
that would give you a number that has the wrong magnitude.  Instead turn the last digit into a zero 
which is insignificant if there's no decimal point present.



END_PGML_SOLUTION

ENDDOCUMENT();