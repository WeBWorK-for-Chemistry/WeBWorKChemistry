## DBsubject()
## DBchapter()
## DBsection()
## Level()
## KEYWORDS()
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1()
## Problem1()
## Author('Stephanie Bryan')
## Institution('PCC')
## Language(en-US)

DOCUMENT();

# Try to only load the macro files that are needed.
loadMacros(
  "PGstandard.pl",
  "PGML.pl",
  "parserPopUp.pl",
  "parserCheckboxList.pl",
  "PGcourse.pl",
);

@tetrahedral = qw(CH_4 CF_4 SiH_4 SiF_4 CCl_4 CBr_4);
@trigonal_pyramid = qw(PF_3 NH_3 NF_3 PH_3 NCl_3 PCl_3 NBr_3);
@bent_104 = qw(H_2O H_2S H_2Se OCl_2 OF_2);
@linear = qw(CO_2 CS_2);
@trigonal_planar = qw(SO_3);
@bent_120 = qw(SO_2, O_3);

%EGclass = (
    (map {$_ => 'tetrahedral'} @tetrahedral),
    (map {$_ => 'tetrahedral'} @trigonal_pyramid),
    (map {$_ => 'tetrahedral'} @bent_104),
    (map {$_ => 'linear'} @linear),
    (map {$_ => 'trigonal planar'} @bent_120),
    (map {$_ => 'trigonal planar'} @trigonal_planar),
);

%MGclass = (
    (map {$_ => 'tetrahedral'} @tetrahedral),
    (map {$_ => 'trigonal pyramid'} @trigonal_pyramid),
    (map {$_ => 'bent'} @bent_104),
    (map {$_ => 'linear'} @linear),
    (map {$_ => 'trigonal planar'} @trigonal_planar),
    (map {$_ => 'bent'} @bent_120),
);
# randomly pick two of each type
@tetrahedral_choice = random_subset(1, @tetrahedral);
@trigonal_pyramid_choice = random_subset(1, @trigonal_pyramid);
@bent_104_choice = random_subset(1, @bent_104);
@linear_choice = random_subset(1, @linear);
@trigonal_planar_choice = random_subset(1, @trigonal_planar);
@bent_120_choice = random_subset(1, @bent_120);

@formulas = random_subset(6,
   @tetrahedral_choice,
   @trigonal_pyramid_choice,
   @bent_104_choice,
   @linear_choice,
   @trigonal_planar_choice,
   @bent_120_choice                       
);

@options1 = (
    'tetrahedral',
    'trigonal planar',
    'linear'
);

@options2 = (
    'tetrahedral',
    'trigonal pyramid',
    'trigonal planar',
    'bent',
    'linear'
);
# DropDown is better than PopUp. You don't do something like include a '?'
# in the list. Instead, there is the placeholder option.
# This uses map again to create the 8 dropdowns directly from the 8 elements.
@checks1 = map {
    CheckboxList(
        ~~@options1,
        [$EGclass{$_}],
        separator => $SPACE x 10
    )
} @formulas;

@checks2 = map {
    CheckboxList(
        ~~@options2,
        [$MGclass{$_}],
        separator => $SPACE x 10
    )
} @formulas;


BEGIN_PGML

1. The electron geometry of [``\mathrm{[$formulas[0]]}``] is: [_]{$checks1[0]}
    The molecular geometry of [``\mathrm{[$formulas[0]]}``] is: [_]{$checks2[0]}

    
2. The electron geometry of [``\mathrm{[$formulas[1]]}``] is: [_]{$checks1[1]}
    The molecular geometry of [``\mathrm{[$formulas[1]]}``] is: [_]{$checks2[1]}


1. The electron geometry of [``\mathrm{[$formulas[2]]}``] is: [_]{$checks1[2]}
    The molecular geometry of [``\mathrm{[$formulas[2]]}``] is: [_]{$checks2[2]}

    
2. The electron geometry of [``\mathrm{[$formulas[3]]}``] is: [_]{$checks1[3]}
    The molecular geometry of [``\mathrm{[$formulas[3]]}``] is: [_]{$checks2[3]}
    

1. The electron geometry of [``\mathrm{[$formulas[4]]}``] is: [_]{$checks1[4]}
    The molecular geometry of [``\mathrm{[$formulas[4]]}``] is: [_]{$checks2[4]}

    
2. The electron geometry of [``\mathrm{[$formulas[5]]}``] is: [_]{$checks1[5]}
    The molecular geometry of [``\mathrm{[$formulas[5]]}``] is: [_]{$checks2[5]}

END_PGML

BEGIN_PGML_HINT

Make sure you only have one choice selected for each line.  Also note that *trigonal planar* is a different geometry than *trigonal pyramid*. 

For more information on [@ htmlLink( protect_underbar("https://chem.libretexts.org/Courses/Portland_Community_College/CH104%3A_Allied_Health_Chemisty_I_(2nd_Edition)/07%3A_Molecules_Covalent_Bonding_and_the_Nomenclature_of_Binary_Covalent_Compounds/7.07%3A_Molecular_Geometry-_VSEPR"), protect_underbar("VSEPR geometries, click here"), "TARGET='_blank'" ); @]*

END_PGML_HINT

ENDDOCUMENT();

