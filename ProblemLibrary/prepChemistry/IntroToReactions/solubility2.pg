## DBsubject()
## DBchapter()
## DBsection()
## Level()
## KEYWORDS()
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1()
## Problem1()
## Author('Stephanie Bryan')
## Institution('PCC')
## Language(en-US)

DOCUMENT();

############################################################
# Load Macros
############################################################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGunion.pl",
  "contextReaction.pl",
  "PGcourse.pl",
  "parserPopUp.pl",
  "answerHints.pl",
  "PGchoicemacros.pl",
);

############################################################
# Header
############################################################
#COMMENT('');
TEXT(beginproblem());

############################################################
# PG Setup
############################################################
Context("Numeric");
Context()->flags->set(
  #tolerance => 10**-10,      #default is 0.001
  #tolType => 'absolute',  #default is 'relative'
);

@cations = ('Na','K','Li','Ca','Ba','Sr','Pb','Mg', 'Cu', 'Fe', 'Ag');
@cat_charge = ('','','',2,2,2,2,2,2,2,'');
@anions = ('NO_3','CH_3COO','ClO_3','SO_4','Cl', 'Br', 'I','F','CO_3', 'PO_4','CrO_4','C_2O_4', 'O');
@anion_charge = ('','','',2,'','','','',2,3,2,2,2);

#soluble anions (except 1 where all are soluble) with exception cations for being insoluble
@SolCat1 = ('Na','NH_4','K','Li');
@SolAnion1 = ('NO_3','CH_3COO','ClO_3');
@InCat2 = ('Ca','Ba','Sr','Pb');
@Solanion2 = ('SO_4');
@InCat3 = ('Ag','Hg_2','Pb');
@SolAnion3 = ('Cl', 'Br', 'I');
@InCat4 = ('Mg','Ca','Sr', 'Ba', 'Pb');
@SolAnion4 = ('F');

# insoluble anions with cations that cause soluble exceptions
@SolCat5 = ('Na','NH_4','K','Li');
@InAnion5 = ('CO_3', 'PO_4','CrO_4','C_2O_4', 'O');
@SolCat6 = ('Na','NH_4','K','Li', 'Ba','Sr','Mg');
@InAnion6 = ('OH');
@SolCat7 = ('Na','NH_4','K','Li', 'Ba');
@InAnion7 = ('S');

my @numbers;
my %unique;
my @numbers2;
my %unique2;
my @sol;


#pick 5 cations
for (0..4) {
        my $number2 = random(0,10);
        redo if $unique2{$number2}++;
        push @numbers2, $number2;
        }

#pick an anion
my $x = random(0,10);
 
@options = ('?','soluble', 'insoluble', 'none of the above');

#checking solubility rules
#pick 5 anions
for (0..4) 
        {
        $y = $numbers2[$_];
        $cation = $cations[$y];
        $cat[$_] = $cations[$y];
        $cc[$_] = $cat_charge[$y];
        $anion = $anions[$x];
        $ac = $anion_charge[$x];
        if ($cation eq 'Na') {$sol[$_] = 1;}
        elsif ($cation eq 'NH_4') {$sol[$_] = 1;}
        elsif ($cation eq 'K') {$sol[$_] = 1;}
        elsif ($cation eq 'Li') {$sol[$_] = 1;}
        elsif ($anion eq 'NO_3') {$sol[$_] = 1;}
        elsif ($anion eq 'CH_3COO') {$sol[$_] = 1;}
        elsif ($anion eq 'ClO_3') {$sol[$_] = 1;}
        elsif ($anion eq 'SO_4') {
            if ($cation eq 'Ca') {$sol[$_] = 2;}
            elsif ($cation eq 'Ba') {$sol[$_] = 2;}
            elsif ($cation eq 'Sr') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
            }
        elsif ($anion eq 'Cl') {
            if ($cation eq 'Ag') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
                }
        elsif ($anion eq 'Br') {
            if ($cation eq 'Ag') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
                }
        elsif ($anion eq 'I') {
            if ($cation eq 'Ag') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
                }
         elsif ($anion eq 'F') {
            if ($cation eq 'Mg') {$sol[$_] = 2;}
            elsif ($cation eq 'Ca') {$sol[$_] = 2;}
            elsif ($cation eq 'Sr') {$sol[$_] = 2;}
            elsif ($cation eq 'Ba') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
                }
          elsif ($anion eq 'OH') {
            if ($cation eq 'Mg') {$sol[$_] = 1;}
            elsif ($cation eq 'Sr') {$sol[$_] = 1;}
            elsif ($cation eq 'Ba') {$sol[$_] = 1;}
            else {$sol[$_] = 2;}
                }
          elsif ($anion eq 'S') {
            if ($cation eq 'Ba') {$sol[$_] = 1;}
            else {$sol[$_] = 2;}
                }
          else {$sol[$_] = 2;}
            }
            
@options = ('?', 'aqueous solution', 'precipitate', 'not enough information');

$pop0 = PopUp( [ @options ], $sol[0] );  
$pop1 = PopUp( [ @options ], $sol[1] );  
$pop2 = PopUp( [ @options ], $sol[2] );  
$pop3 = PopUp( [ @options ], $sol[3] );  
$pop4 = PopUp( [ @options ], $sol[4] );
            
#writing formulas


############################################################
# Body
############################################################

BEGIN_PGML
##Solubility Rules

Using the [@ htmlLink( protect_underbar("https://chem.libretexts.org/Courses/Portland_Community_College/CH151%3A_Preparatory_Chemistry/09%3A_An_Introduction_to_Chemical_Reactions/9.06%3A_Solubility_Rules"), protect_underbar("Solubility Rules in your textbook"), "TARGET='_blank'" ); @]*, to determine what will result when the following cations are mixed with [``[$anion]^{[$ac]-}``].  Will this produce an aqueous solution, a precipitate, or is there not enough information to decide? 

[``[$cat[0]]^{[$cc[0]]+}``]  [_____]{$pop0}

[``[$cat[1]]^{[$cc[1]]+}``]  [_____]{$pop1}

[``[$cat[2]]^{[$cc[2]]+}``]  [_____]{$pop2}

[``[$cat[3]]^{[$cc[3]]+}``]  [_____]{$pop3}

[``[$cat[4]]^{[$cc[4]]+}``]  [_____]{$pop4}

END_PGML
############################################################
BEGIN_PGML_HINT

To review solubility rules, click [@ htmlLink( protect_underbar("https://chem.libretexts.org/Courses/Portland_Community_College/CH151%3A_Preparatory_Chemistry/09%3A_An_Introduction_to_Chemical_Reactions/9.06%3A_Solubility_Rules"), protect_underbar("here"), "TARGET='_blank'" ); @]*


END_PGML_HINT

############################################################
# Solution
############################################################

#BEGIN_PGML_SOLUTION

#END_PGML_SOLUTION

############################################################
# End Problem
############################################################




ENDDOCUMENT();