## DBCCSS('')
## Institution(PCC)
## Author(Lee McPherson, Stephanie Bryan)

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
  "answerHints.pl",
  "niceTables.pl",
  "parserPopUp.pl",
  "contextInexactValue.pl",
  "contextInexactValueWithUnits.pl",
  "parserDimensionalAnalysis.pl",
  "parserMultiAnswer.pl",
  "weightedGrader.pl",
  "contextChemical.pl"
);

HEADER_TEXT(<<EOF);
  <style>
  .conversionEQ {
    display: flex;
    align-items: center;
  }
  .conversionEQ > div {
    text-align: center;
  }
  .conversionFractionBar {
  line-height: 1px;
  width: 100%;
  border-bottom: 1px solid black;
  margin-bottom: 4px;
  }
  .conversionEQmath {
    padding: 1em;
  }
  </style>  
EOF

##############################################

sub conversionEQ {
  my $start = shift;
  my $colsref = shift;
  my $n = scalar @{$colsref};
  my $end = shift;
  my $html;
  $html .= '<div class="conversionEQ">';
    $html .= '<div>';
      $html .= $start;
    $html .= '</div>';
    for ($i=0; $i < $n; $i+=2) {
      $html .= '<div class="conversionEQmath">';
         $html .= math_ev3('\times');
      $html .= '</div>';
      $html .= '<div class="conversionEQcol">';
         $html .= '<div>';
             $html .= $colsref->[$i];
         $html .= '</div>';       
         $html .= '<div class="conversionFractionBar">';
             $html .= '<svg height="1" width="40">';
                 $html .= '<desc>per</desc>';
             $html .= '</svg>';
         $html .= '</div>';       
         $html .= '<div>';
             $html .= $colsref->[$i+1];
         $html .= '</div>';       
      $html .= '</div>';
  }
  $html .= '<div  class="conversionEQmath">';
      $html .= math_ev3('{}={}');
  $html .= '</div>';
  $html .= '<div>';
      $html .= $end;
  $html .= '</div>';
  $html .= '</div>';
  MODES(HTML=>$html);
}

install_weighted_grader();

Context("Numeric");

$m = random(1.01 ,9.99, 0.01);

$x = random(0,7);



@formulas = ('NO_2', 'CO_2', 'CCl_4', 'CBr_4', 'H_2O', 'SO_3', 'NCl_3', 'NBr_3');

@mass = ('46.01', '44.01', '153.81', '331.61', '18.02', '80.06', '120.36', '239.70');

@elements = ('O', 'O', 'Cl', 'Br', 'O', 'O', 'Cl', 'Br');

@numbers = (2,2,4,4,1,3,3,3);

@numMasses = ('16.00', '16.00', '35.45', '79.90', '16.00', '16.00', '35.45', '79.90');

$compound = $formulas[$x];
$formMass = $mass[$x];
$element = $elements[$x];
$number = $numbers[$x];
$numMass = $numMasses[$x];
$num = $m;


#Context("InexactValueWithUnits");
Context("InexactValueWithUnits")->flags->set('hasChemicals' => 1);

$n = InexactValue ( $m, 3);
$given = InexactValueWithUnits( [$num , 3], "g $compound");

$n1 = InexactValueWithUnits(['1', 9**9**9], 'mol');
$d1 = InexactValueWithUnits([$formMass, 4], 'g'); 

$n2 = InexactValueWithUnits([$number, 9**9**9], "mol $element");
$d2 = InexactValueWithUnits(['1', 9**9**9], "mol $compound");

$n3 = InexactValueWithUnits($numMass, 'g');
$d3 = InexactValueWithUnits(['1', 9**9**9], 'mol'); 

$answer = $given * $n1 / $d1 * $n2 / $d2* $n3 / $d3;

# To create a dimensional analysis problem, first put all of the expected answer blanks into the MultiAnswer section.
# These need to be numerator, then denominator... in that pattern exactly.  You end it with a precalculated answer because
# we expect students to fill in that blank, too.
# Finally, instead of customizing your own MultiAnswer, call the asDimensionalAnalysis function and provide it the starting value for the 
# actual dimensional analysis.  A second parameter will adjust how the scoring is done.

$ma = MultiAnswer($n1,$d1,$n2,$d2,$n3,$d3,$answer)->asDimensionalAnalysis($given);

# use the conversionEQ below by filling in the starting value, an array of the conversion factor blanks, then the final answer blank.

$dimensionalAnalysisSolution = DimensionalAnalysis::generateExplanation([$given],[$n1,$d1,$n2,$d2,$n3,$d3],$answer);
##############################################

TEXT(beginproblem());

BEGIN_PGML

##Mole Conversions - grams molecule to grams element

The given value has been placed into the problem below. Fill in the conversion factor(s) and the final answer. 
* Don't forget to include units and calculate the answer to the proper number of sig figs. 
* Use *[@ htmlLink( protect_underbar("https://spot.pcc.edu/chemistry/periodic-table/?maxPrecision=2&minDecimals=2"), protect_underbar("this linked periodic table"), "TARGET='_blank'" ); @]* *to find the molar mass needed.  Use molar masses rounded to the nearest hundredth. 
* Be sure to use *grams [`\mathbf{[$element]}`] *in the units of your final answer.

####Calculate the number of grams of [`\mathrm{[$element]}`] in [`[$given->TeX]`].

[@conversionEQ('$$' . $given->TeX . '$$',[ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10)],ans_rule(10));@]*


END_PGML


# This weights the final answer with X percentage and splits the rest among the conversion factors.
my $finalAnswerWeight = 50;
my $remain = 100-$finalAnswerWeight;
my @ansArr = $ma->cmp();
my $finalAns = pop @ansArr;
for ($i=0; $i<scalar @ansArr; $i++){
	WEIGHTED_ANS($ansArr[$i], $remain/(scalar @ansArr)); # sets weighting for dimensional analysis blanks
}
WEIGHTED_ANS($finalAns, $finalAnswerWeight); # sets weighting for final answer

# Without weighting, you could simply use this:
# ANS($ma->cmp);
# each answer blank will be worth the same amount of points.

##############################################

BEGIN_TEXT

END_TEXT

BEGIN_PGML_HINT

First convert to moles of [`\mathrm{[$compound]}`], then use the subscripts in the formula to construct a conversion factor that will convert moles [`\mathrm{[$compound]}`] to moles [`\mathrm{[$element]}`], then convert moles [`\mathrm{[$element]}`] to grams [`\mathrm{[$element]}`].

For more information on mole conversion, click [@ htmlLink( protect_underbar("https://chem.libretexts.org/Courses/Portland_Community_College/CH104%3A_Allied_Health_Chemisty_I_(2nd_Edition)/08%3A_Counting_Atoms_Ions_and_Molecules/8.01%3A_Counting_Atoms_by_the_Gram"), protect_underbar("here"), "TARGET='_blank'" ); @]*


END_PGML_HINT
##############################################

BEGIN_PGML_SOLUTION

[```[$dimensionalAnalysisSolution]```]


END_PGML_SOLUTION

ENDDOCUMENT();

