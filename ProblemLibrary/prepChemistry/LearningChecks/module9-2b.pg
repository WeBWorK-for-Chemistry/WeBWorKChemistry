## DBsubject()
## DBchapter()
## DBsection()
## Level()
## KEYWORDS()
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1()
## Problem1()
## Author('Stephanie Bryan')
## Institution('PCC')
## Language(en-US)

DOCUMENT();

############################################################
# Load Macros
############################################################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGunion.pl",
  "contextReaction.pl",
  "PGcourse.pl",
  "parserPopUp.pl",
  "answerHints.pl",
);

############################################################
# Header
############################################################
#COMMENT('');
TEXT(beginproblem());

############################################################
# PG Setup
############################################################
Context("Numeric");
Context()->flags->set(
  #tolerance => 10**-10,      #default is 0.001
  #tolType => 'absolute',  #default is 'relative'
);

@cations = ('Na','K','Li','Ca','Ba','Sr','Pb','Mg', 'Cu', 'Fe', 'Ag');
@cat_charge = (1,1,1,2,2,2,2,2,2,2,1);
@anions = ('NO_3','CH_3COO','ClO_3','SO_4','Cl', 'Br', 'I','F','CO_3', 'PO_4','CrO_4','C_2O_4', 'O');
@anion_charge = (1,1,1,2,1,1,1,1,2,3,2,2,2);

#soluble anions (except 1 where all are soluble) with exception cations for being insoluble
@SolCat1 = ('Na','NH_4','K','Li');
@SolAnion1 = ('NO_3','CH_3COO','ClO_3');
@InCat2 = ('Ca','Ba','Sr','Pb');
@Solanion2 = ('SO_4');
@InCat3 = ('Ag','Hg_2','Pb');
@SolAnion3 = ('Cl', 'Br', 'I');
@InCat4 = ('Mg','Ca','Sr', 'Ba', 'Pb');
@SolAnion4 = ('F');

# insoluble anions with cations that cause soluble exceptions
@SolCat5 = ('Na','NH_4','K','Li');
@InAnion5 = ('CO_3', 'PO_4','CrO_4','C_2O_4', 'O');
@SolCat6 = ('Na','NH_4','K','Li', 'Ba','Sr','Mg');
@InAnion6 = ('OH');
@SolCat7 = ('Na','NH_4','K','Li', 'Ba');
@InAnion7 = ('S');

my @numbers;
my %unique;
my @numbers2;
my %unique2;
my @sol;

#pick 5 cations
for (0..4) {
    my $number = random(0,10);
    redo if $unique{$number}++;
    push @numbers, $number;
 }

#pick 5 anions
for (0..4) {
    my $number2 = random(0,12);
    redo if $unique2{$number2}++;
    push @numbers2, $number2;
 }
 
@options = ('?','soluble', 'insoluble', 'none of the above');

#checking solubility rules
for (0..4) {
       $x = $numbers[$_];
       $y = $numbers2[$_];
       $cation = $cations[$x];
       $anion = $anions[$y];
        if ($cation eq 'Na') {$sol[$_] = 1;}
        elsif ($cation eq 'NH_4') {$sol[$_] = 1;}
        elsif ($cation eq 'K') {$sol[$_] = 1;}
        elsif ($cation eq 'Li') {$sol[$_] = 1;}
        elsif ($anion eq 'NO_3') {$sol[$_] = 1;}
        elsif ($anion eq 'CH_3COO') {$sol[$_] = 1;}
        elsif ($anion eq 'ClO_3') {$sol[$_] = 1;}
        elsif ($anion eq 'SO_4') {
            if ($cation eq 'Ca') {$sol[$_] = 2;}
            elsif ($cation eq 'Ba') {$sol[$_] = 2;}
            elsif ($cation eq 'Sr') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
            }
        elsif ($anion eq 'Cl') {
            if ($cation eq 'Ag') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
                }
        elsif ($anion eq 'Br') {
            if ($cation eq 'Ag') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
                }
        elsif ($anion eq 'I') {
            if ($cation eq 'Ag') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
                }
         elsif ($anion eq 'F') {
            if ($cation eq 'Mg') {$sol[$_] = 2;}
            elsif ($cation eq 'Ca') {$sol[$_] = 2;}
            elsif ($cation eq 'Sr') {$sol[$_] = 2;}
            elsif ($cation eq 'Ba') {$sol[$_] = 2;}
            elsif ($cation eq 'Pb') {$sol[$_] = 2;}
            else {$sol[$_] = 1;}
                }
          elsif ($anion eq 'OH') {
            if ($cation eq 'Mg') {$sol[$_] = 1;}
            elsif ($cation eq 'Sr') {$sol[$_] = 1;}
            elsif ($cation eq 'Ba') {$sol[$_] = 1;}
            else {$sol[$_] = 2;}
                }
          elsif ($anion eq 'S') {
            if ($cation eq 'Ba') {$sol[$_] = 1;}
            else {$sol[$_] = 2;}
                }
          else {$sol[$_] = 2;}
            }
  
$sol0= $sol[0];
$sol1= $sol[1];            
$sol2= $sol[2];
$sol3= $sol[3];            
$sol4= $sol[4];           
            
#writing formulas
for (0..4) {
       $x = $numbers[$_];
       $y = $numbers2[$_];
       $cation = $cations[$x];
       $c = $cat_charge[$x];
       $anion = $anions[$y];
       $a = $anion_charge[$y];
       if ($c == 1) {
            if ($a == 1) {
                $molecule[$_] = "{$cation}{$anion}";
                }
            elsif ($a > 1) {
                $molecule[$_] = "{$cation}_$a {$anion}";
                }
            }
       else {
            if ($a == 1) {
                if ($anion eq 'Cl') {
                $molecule[$_] = "{$cation}{$anion}_$c";
                }
                elsif ($anion eq 'Br') {
                $molecule[$_] = "{$cation}{$anion}_$c";
                }
                elsif ($anion eq 'I') {
                $molecule[$_] = "{$cation}{$anion}_$c";
                }
                elsif ($anion eq 'F') {
                $molecule[$_] = "{$cation}{$anion}_$c";
                }
                elsif ($anion eq 'O') {
                $molecule[$_] = "{$cation}{$anion}_$c";
                }
                else {
                $molecule[$_] = "{$cation}({$anion})_$c";
                }
                }
            elsif ($a == $c) {
                $molecule[$_] = "{$cation}{$anion}";
                }
            else {
                if ($anion eq 'Cl') {
                $molecule[$_] = "{$cation}_$a{$anion}_$c";
                }
                elsif ($anion eq 'Br') {
                $molecule[$_] = "{$cation}_$a{$anion}_$c";
                }
                elsif ($anion eq 'I') {
                $molecule[$_] = "{$cation}_$a{$anion}_$c";
                }
                elsif ($anion eq 'F') {
                $molecule[$_] = "{$cation}_$a{$anion}_$c";
                }
                elsif ($anion eq 'O') {
                $molecule[$_] = "{$cation}_$a{$anion}_$c";
                }
                else {
                $molecule[$_] = "{$cation}_$a({$anion})_$c";
                }
               } 
             }
        }

$pop0 = PopUp( [ @options ], $sol0 );  
$pop1 = PopUp( [ @options ], $sol1 );  
$pop2 = PopUp( [ @options ], $sol2 );  
$pop3 = PopUp( [ @options ], $sol3 );  
$pop4 = PopUp( [ @options ], $sol4 );  

############################################################
# Body
############################################################

BEGIN_PGML
##Solubility Rules

Using the [@ htmlLink( protect_underbar("https://chem.libretexts.org/Courses/Portland_Community_College/CH151%3A_Preparatory_Chemistry/09%3A_An_Introduction_to_Chemical_Reactions/9.06%3A_Solubility_Rules"), protect_underbar("Solubility Rules in your textbook"), "TARGET='_blank'" ); @]*, determine if the following compounds are soluble or insoluble in water.  


[``[$molecule[0]]``]  [_____]{$pop0}

[``[$molecule[1]]``]  [_____]{$pop1}

[``[$molecule[2]]``]  [_____]{$pop2}

[``[$molecule[3]]``]  [_____]{$pop3}

[``[$molecule[4]]``]  [_____]{$pop4}


END_PGML
############################################################
BEGIN_PGML_HINT

To review solubility rules, click [@ htmlLink( protect_underbar("https://chem.libretexts.org/Courses/Portland_Community_College/CH151%3A_Preparatory_Chemistry/09%3A_An_Introduction_to_Chemical_Reactions/9.06%3A_Solubility_Rules"), protect_underbar("here"), "TARGET='_blank'" ); @]*


END_PGML_HINT

############################################################
# Solution
############################################################

#BEGIN_PGML_SOLUTION

#END_PGML_SOLUTION

############################################################
# End Problem
############################################################




ENDDOCUMENT();