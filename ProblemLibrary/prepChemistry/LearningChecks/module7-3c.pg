## DBsubject()
## DBchapter()
## DBsection()
## Level()
## KEYWORDS()
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1()
## Problem1()
## Author('Stephanie Bryan')
## Institution('PCC')
## Language(en-US)

DOCUMENT();

############################################################
# Load Macros
############################################################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGunion.pl",
  "contextReaction.pl",
  "PGcourse.pl",
  "parserPopUp.pl",
  "answerHints.pl",
  "contextString.pl",
  "contextArbitraryString.pl"
);

############################################################
# Header
############################################################
#COMMENT('');
TEXT(beginproblem());

############################################################
# PG Setup
############################################################

Context("ArbitraryString");


@element = ("H", "O","C", "N", "F", "P", "S", "Cl", "Se", "Br", "I", "Si", "B");

@e1name = ("h","oxygen", "carbon", "nitrogen", "fluorine", "phosphorus", "sulfur", "chlorine", "selenium", "bromine", "iodine", "silicon", "boron");

@e2name = ("hydride", "oxide","carbide", "nitride", "fluoride", "phosphide", "sulfide", "chloride", "selenide", "bromide", "iodide");



my @numbers;
my @numbers2;
my %unique;
my %unique2;

for (0..6) {
    my $number = random(2,12);
    redo if $unique{$number}++;
    push @numbers, $number;
    }
    
for (0..6) {
    my $number2 = random(0,10);
    redo if $unique2{$number2}++;
    push @numbers2, $number2;
 }
 


foreach (0..6) {
    $i = $numbers[$_];
    $j = $numbers2[$_]; 
    
    while ($i == $j) {
        if ($j < 10) {
        $j++;
        }
        else {
        $i = 11;
        }
    }
    
    $e1[$_] = $element[$i];
    $e2[$_] = $element[$j];
    
    $asub[$_] = random(1,9);
    if ($asub[$_] == 1 && $j == 1) {
        $apref = "mon";
        }
    elsif ($asub[$_] == 1) {
        $apref = "mono";
        }
    elsif ($asub[$_] == 2) {
        $apref = "di";
        }
    elsif ($asub[$_] == 3) {
        $apref = "tri";
        }
    elsif ($asub[$_] == 4 && $j == 1) {
        $apref = "tetr";
        }
    elsif ($asub[$_] == 4) {
        $apref = "tetra";
        }
    elsif ($asub[$_] == 5 && $j == 1) {
        $apref = "pent";
        }
    elsif ($asub[$_] == 5) {
        $apref = "penta";
        }
    elsif ($asub[$_] == 6 && $j == 1) {
        $apref = "hex";
        } 
    elsif ($asub[$_] == 6) {
        $apref = "hexa";
        }
    elsif ($asub[$_] == 7 && $j == 1) {
        $apref = "hept";
        }
    elsif ($asub[$_] == 7) {
        $apref = "hepta";
        }
    elsif ($asub[$_] == 8 && $j == 1) {
        $apref = "oct";
        }
    elsif ($asub[$_] == 8) {
        $apref = "octa";
        }
    elsif ($asub[$_] == 9 && $j == 1) {
        $apref = "non";
        }
    elsif ($asub[$_] == 9) {
        $apref = "nona";
        }
    
    $csub[$_] = random(1,9);
    if ($csub[$_] == 1) {
        $cpref = "";
        }
    elsif ($csub[$_] == 2) {
        $cpref = "di";
        }
    elsif ($csub[$_] == 3) {
        $cpref = "tri";
        }
    elsif ($csub[$_] == 4) {
        $cpref = "tetra";
        }
    elsif ($csub[$_] == 5) {
        $cpref = "penta";
        }
    elsif ($csub[$_] == 6) {
        $cpref = "hexa";
        }
    elsif ($csub[$_] == 7) {
        $cpref = "hepta";
        }
    elsif ($csub[$_] == 8) {
        $cpref = "octa";
        }
    elsif ($csub[$_] == 9) {
        $cpref = "nona";
        }
    
    if ($csub[$_] == 1 && $asub[$_] == 1) {
        $formula[$_] = "$e1[$_] $e2[$_]";
        }
    elsif ($csub[$_] == 1) {
        $formula[$_] = "$e1[$_] ${e2[$_]}_$asub[$_]";
        }
    elsif ($asub[$_] == 1) {
        $formula[$_] = "${e1[$_]}_$csub[$_] $e2[$_]";
        }
    else {
        $formula[$_] = "${e1[$_]}_$csub[$_] ${e2[$_]}_$asub[$_]";
        }
        
    $answ[$_] = $cpref.$e1name[$i]." ".$apref.$e2name[$j];
    }

@cations = ("Rb", "Li", "Sr",  "Na", "Mg", "Al", "K", "Ca", "Pb", ,"Pb", "Fe", "Fe", "Cu", "Cu", "Mn", "Sn", "Sn", "Co", "Co", "Cr", "Cr");

@cat_charge = ("+", "+", "2+",  "+", "2+", "3+", "+", "2+", "2+", "4+","2+","3+","+","2+","7+","2+","4+","2+","3+","2+","3+");

@anion_sub = (1,1,2,1,2,3,1,2,2,4,2,3,1,2,7,2,4,2,3,2,3);
    
@cname = ("rubidium", "lithium", "strontium", "sodium", "magnesium", "aluminum",  "potassium", "calcium", "lead(II)", "lead(IV)", "iron(II)", "iron(III)", "copper(I)", "copper(II)", "manganese(VII)", "tin(II)", "tin(IV)", "cobalt(II)", "cobalt(III)", "chromium(II)", "chromium(III)");

@anions = ("CH_3COO", "ClO_3", "ClO_2", "CN", "OH", "NO_3", "NO_2", "MnO_4", "CO_3", "Cr_2O_7", "SO_4", "SO_3", "PO_4", "N", "P","F", "Cl", "Br","I","S", "O");

@aname = ("acetate", "chlorate", "chlorite", "cyanide", "hydroxide", "nitrate", "nitrite", "permanganate", "carbonate", "dichromate","sulfate", "sulfite", "phosphate", "nitride", "phosphide", "fluoride", "chloride", "bromide","iodide","sulfide", "oxide");

@anion_charge = ("-", "-", "-", "-", "-", "-", "-", "-", "2-", "2-", "2-", "2-", "3-", "3-", "3-","-", "-", "-", "-","2-", "2-");

@cation_sub = (1,1,1,1,1,1,1,1,2,2,2,2,3,3,3,1,1,1,1,2,2);



my @numbers3;
my %unique3;
my %unique4;
for (0..6) {
    my $number3 = random(0,20);
    redo if $unique3{$number3}++;
    push @numbers3, $number3;
    }
for (0..6) {
    my $number4 = random(0,20);
    redo if $unique4{$number4}++;
    push @numbers4, $number4;
 }

foreach (7..13) {
    $n = $_ -7;
    $k = $numbers[$n];
    $m = $numbers2[$n];   
    
    $cat[$_] = $cations[$k];
    $cc[$_] = $cat_charge[$k];
    $asub[$_] = $anion_sub[$k];
    
    $an[$_] = $anions[$m];
    $ac[$_] = $anion_charge[$m];
    $csub[$_] = $cation_sub[$m];
    
    if ($csub[$_] == 2 && $asub[$_] == 4) {
        $csub[$_] = 1;
        $asub[$_] = 2;
        }

    
    if ($csub[$_] == 1 && $asub[$_] == 1) {
        $formula[$_] = "$cat[$_] $an[$_]";
        }
    elsif ($csub[$_] == 1) {
        if ($j < 13) {
        $formula[$_] = "$cat[$_] (${an[$_]})_$asub[$_]";
            }
        else {
        $formula[$_] = "$cat[$_] ${an[$_]}_$asub[$_]";
            }
        }
    elsif ($asub[$_] == 1) {
        $formula[$_] = "${cat[$_]}_$csub[$_] $an[$_]";
        }
    elsif ($csub[$_] == $asub[$_]) {
        $formula[$_] = "$cat[$_] $an[$_]";
        }
    elsif ($j < 13) {
        $formula[$_] = "${cat[$_]}_$csub[$_] (${an[$_]})_$asub[$_]";
        }
    else {
        $formula[$_] = "${cat[$_]}_$csub[$_] ${an[$_]}_$asub[$_]";
        }
        
    $answ[$_] = $cname[$k]." ".$aname[$m];
    }


my @numbers5;
my %unique5;
for (0..13) {
    my $number5 = random(0,13);
    redo if $unique5{$number5}++;
    push @numbers5, $number5;
    }

for (0..13) {
    $a = $numbers5[$_];
    $finalans[$_] = $answ[$a];
    }
    
Context("Reaction");  
for (0..13) {
    $b = $numbers5[$_];
    $fformula[$_] = Formula($formula[$b]);
    }
    
foreach (0..13) {
    ANS($fformula[$_]->cmp()->withPostFilter(AnswerHints(
  [Compute("Al(CH_3CO_2)_3"),Compute("Rb(CH_3CO_2)_2"), Compute("Sr(CH_3CO_2)_2"), Compute("NaCH_3CO_2"), Compute("Mg(CH_3CO_2)_2"), Compute("KCH_3CO_2"), Compute("Ca(CH_3CO_2)_2"),Compute("Pb(CH_3CO_2)_2"),Compute("Pb(CH_3CO_2)_4"), Compute("Fe(CH_3CO_2)_2"), Compute("Fe(CH_3CO_2)_3"), Compute("Cu(CH_3CO_2)_2"),Compute("CuCH_3CO_2"), Compute("Mn(CH_3CO_2)_7"),Compute("Sn(CH_3CO_2)_2"), Compute("Sn(CH_3CO_2)_4"), Compute("Co(CH_3CO_2)_2"), Compute("Co(CH_3CO_2)_3"), Compute("Cr(CH_3CO_2)_2"), Compute("Cr(CH_3CO_2)_3")] => 
  "Please use CH_3COO for acetate in this problem. There are many ways to write this formula and only this form is accepted for this problem.",
)));
            }

############################################################
# Body
############################################################

BEGIN_PGML
##Writing Both Ionic and Covalent Formulas

Write the formulas for the following named compounds. They may be either ionic or covalent compounds.  Please note that these formulas may be fictional and used for naming practice only.  Please do not use the internet for naming but learn the IUPAC rules for naming.  

*Rules for entering formulas:* Instead of subscriping the numbers in formulas, you will type an underscore when you want the next number to be a subscript.  The 2 in the formula [`H_2 O`], the formula for water, is a subscript.  It sits lower than the rest.  The formula for water will be written H_2O in a WeBWorK answer blank. The _ before the 2 tells the computer it is a subscript.  You can type that character on a Windows computer using shift and the dash button.

There are multiple ways the acetate ion can be written.  Use [`CH_3COO^{-}`] for acetate in this problem.  This would be entered as CH_3COO in the formula. 



a. [$finalans[0]] [____________________]{$final[0]} 

a. [$finalans[1]] [____________________]{$final[1]} 

a. [$finalans[2]] [____________________]{$final[2]}

a. [$finalans[3]] [____________________]{$final[3]} 

a. [$finalans[4]] [____________________]{$final[4]}

a. [$finalans[5]] [____________________]{$final[5]}

a. [$finalans[6]] [____________________]{$final[6]} 

a. [$finalans[7]] [____________________]{$final[7]}

a. [$finalans[8]] [____________________]{$final[8]} 

a. [$finalans[9]] [____________________]{$final[9]}

a. [$finalans[10]] [____________________]{$final[10]} 

a. [$finalans[11]] [____________________]{$final[11]}

a. [$finalans[12]] [____________________]{$final[12]}

a. [$finalans[13]] [____________________]{$final[13]}





END_PGML
############################################################
#BEGIN_PGML_HINT




#END_PGML_HINT

############################################################


#BEGIN_PGML_SOLUTION



#END_PGML_SOLUTION

############################################################
# End Problem
############################################################




ENDDOCUMENT();

